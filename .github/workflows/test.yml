name: Test Package

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # full git history for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make g-xtb binary executable (before install)
        run: |
          chmod +x vendor/g-xtb/binary/gxtb

      - name: Install package
        run: |
          pip install .

      - name: Test water.py example
        run: |
          cd examples
          python water.py

      - name: Test spectroscopy.py example
        run: |
          cd examples
          python spectroscopy.py

      - name: Check binary is in installed package
        run: |
          python -c "
          import sys
          from gxtb_ase.calculator import GxTB
          import gxtb_ase
          from pathlib import Path

          # Test that calculator can find binary in installed package
          calc = GxTB()
          bin_path = str(calc.binary_path)
          print('g-xtb binary path:', bin_path)

          # Check if binary is in site-packages (installed package)
          pkg_path = Path(gxtb_ase.__file__).parent
          if 'site-packages' not in str(pkg_path):
              print('ERROR: Package is not installed in site-packages')
              sys.exit(1)
              
          # Verify binary exists and is executable
          if not calc.binary_path.exists():
              print('ERROR: g-xtb binary not found at', bin_path)
              sys.exit(1)
              
          if not calc.binary_path.is_file():
              print('ERROR: g-xtb binary is not a file at', bin_path)
              sys.exit(1)
              
          # Check if binary is actually in the installed package directory
          installed_binary_path = pkg_path / 'vendor' / 'g-xtb' / 'binary' / 'gxtb'
          if not installed_binary_path.exists():
              print('ERROR: Binary not found in installed package at:', installed_binary_path)
              sys.exit(1)
              
          print('SUCCESS: g-xtb binary is in the installed package directory')
          print('SUCCESS: Binary is executable and ready to use')

          # Verify parameters are also in installed package
          param_path = str(calc.parameter_path)
          print('g-xtb parameters path:', param_path)

          if not calc.parameter_path.exists():
              print('ERROR: Parameter directory not found at', param_path)
              sys.exit(1)
              
          # Check for essential parameter files
          required_files = ['.gxtb', '.eeq', '.basisq']
          for param_file in required_files:
              param_file_path = calc.parameter_path / param_file
              if not param_file_path.exists():
                  print('ERROR: Required parameter file not found:', param_file)
                  sys.exit(1)
                  
          # Check if parameters are actually in the installed package directory
          installed_param_path = pkg_path / 'vendor' / 'g-xtb' / 'parameters'
          if not installed_param_path.exists():
              print('ERROR: Parameters not found in installed package at:', installed_param_path)
              sys.exit(1)
              
          for param_file in required_files:
              installed_param_file = installed_param_path / param_file
              if not installed_param_file.exists():
                  print('ERROR: Required parameter file not found in installed package:', param_file)
                  sys.exit(1)
                  
          print('SUCCESS: All parameter files are in the installed package directory')
          "

      - name: Test package independence from source repo
        run: |
          # Create a temporary directory outside the source repo
          cd /tmp
          mkdir test_gxtb_ase
          cd test_gxtb_ase

          # Test that the installed package works independently
          python -c "
          import sys
          from gxtb_ase.calculator import GxTB
          from ase import Atoms

          # Create a simple water molecule
          atoms = Atoms('H2O', positions=[[0, 0, 0], [0.957, 0, 0], [0.24, 0.927, 0]])

          # Initialize calculator (should find binary in installed package)
          calc = GxTB()
          atoms.calc = calc

          # Run calculation
          energy = atoms.get_potential_energy()
          forces = atoms.get_forces()

          print(f'Water molecule energy: {energy:.6f} eV')
          print(f'Forces shape: {forces.shape}')
          print('SUCCESS: Package works independently of source repository')
          "

      - name: Check for output files
        run: |
          cd examples
          ls -la *.traj || echo "No trajectory files found"
          ls -la *.log || echo "No log files found"
          ls -la IR/ || echo "No IR directory found"
          ls -la IR/data/ || echo "No IR data files found"
          ls -la IR/plots/ || echo "No IR plot files found"
          ls -la IR/thermochemistry/ || echo "No thermochemistry files found"
